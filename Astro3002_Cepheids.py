#Jenny Calahan
#Astr3002
#Q1.5 from Assignment 3 from Part 2
#Oct. 17 2016

import matplotlib.pyplot as plt
import numpy as np
import pylab
from scipy.stats import linregress
from scipy.optimize import curve_fit

#NGC 3370
mH1=[25.89, 26.21, 25.56, 24.67, 24.63, 24.48, 23.83, 25.5, 24.95, 24.88, 24.94, 24.84, 24.76, 23.9, 24.95, 24.93, 25.25, 25.35, 25.3, 25.22, 24.37, 24.6, 24.94, 23.99, 23.58]

P1=[16.78, 19.64, 32.56, 37.1, 38.54, 41.55, 69.35, 20.52, 24.49, 28.79, 29.6, 39.41, 51.68, 96.49, 33.48, 33.69, 29.43, 27.74, 32.62, 36.99, 43.94, 45.1, 52.72, 50.6, 62.71]

#NGC4258
mH2=[23.2,22.05,20.91,23.59,23.25,22.56,23.04,22.33,21.44,21.63,21.61,21.17,20.93,22.18,22.16,21.48,22.83,22.17,22.05,22.77,21.97,22.19,24.06,23.26,22.49,22.46,22.41,22.96,22.61,23.09,22.99,23.35,22.14,23.06,22.9,23.68,23,22.7,23.65,23.63,23.68,22.83,21.96,22.07,22.36,22.26,22.79,22.7,22.56,21.91,22.86,23.8,22.39,22.19,23.33,21.46,23.12,22.14,23.56,22.34,22.85,22.21,22.88,21.34,22.23,20.26,23.41,23.24,22.38,22.25,23.17,22.97,23.39,22.43,23.66,22.85,22.03,22.51,23.18,23.43,23.02,21.93,21.57,20.56,22.56,23.31,22.7,20.22,23.44,21.76,23.98,24.23,23.68,23.62,23.32,23.78,22.41,23.85]
P2=[11.6,28.13,65.23,10.8,11.16,23.81,23.83,29.48,36.12,50.89,66.89,93.23,95.92,22.42,29.48,66.89,16.99,20.76,22.04,22.68,23.79,50.7,9.979,10.3,18.28,22.35,23.79,27.25,18.42,21.87,14.59,15.64,42.82,12.47,18.19,14.31,20.57,29.05,12.65,16,16.34,25.12,34.41,23.98,26.07,29.63,34.57,33.99,40.54,41.57,12.28,15.91,22.45,25.49,12.28,35.57,22.38,42.31,14.3,25.56,23,22.89,24.86,45.4,32.4,92,14.31,20.57,29.05,36.79,16.03,17.02,16.7,31.78,12.25,23,22.89,28.26,11.99,12.65,16.52,33.02,44.05,83.4,33.29,21.29,31.29,101.9,14.92,53.88,8.503,9.942,10.97,16.43,13.55,8.024,31.74,8.92]


fig = plt.figure()
ax1 = fig.add_subplot(111)

ax1.scatter(np.log10(P1), mH1, s=10, c='b', marker="s", label='NGC 3370')
ax1.scatter(np.log10(P2), mH2, s=10, c='r', marker="o", label='NGC 4258')


ax1.set_xlabel('log(Period)')
ax1.set_ylabel('mH magnitude')

x1 = np.arange(1., 3., 1)
y1 =-3.109478*x1+29.72                #line of best fit NGC3370
plt.plot(x1,y1, 'r--')

x2 = np.arange(1., 3., 1)
y2 =-3.0*x2+26.7458                   #line of best fit NGC4258
plt.plot(x2,y2, 'b--')

plt.legend(loc='upper left')
#plt.xscale('log')

#ax1.plot(P1, z1[0]*P1 + z1[1], '-')
#ax1.plot(P2, z2[0]*P2 + z2[1], '-')

plt.show()

#A=-3
def f(x, A, B): # this is your 'straight line' y=f(x)
    return A*x + B

j, k = curve_fit(f, np.log10(P1), mH1)
print(j) # your data x, y to fit

def f(g, C, D): # this is your 'straight line' y=f(x)
    return C*g + D

m,n = curve_fit(f, np.log10(P2), mH2)
print(m) # your data x, y to fit





